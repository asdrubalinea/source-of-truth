--- linux-6.14.0-63.fc42.x86_64/drivers/gpu/drm/amd/amdgpu/vcn_v4_0_5.c	2025-03-24 10:02:41.000000000 -0400
+++ linux-6.14.0-63.fc42.x86_64/drivers/gpu/drm/amd/amdgpu/vcn_v4_0_5.c	2025-05-02 17:52:13.317389278 -0400
@@ -871,6 +871,7 @@
 static int vcn_v4_0_5_start_dpg_mode(struct amdgpu_device *adev, int inst_idx, bool indirect)
 {
 	volatile struct amdgpu_vcn4_fw_shared *fw_shared = adev->vcn.inst[inst_idx].fw_shared.cpu_addr;
+	struct dpg_pause_state state = {.fw_based = VCN_DPG_STATE__PAUSE};
 	struct amdgpu_ring *ring;
 	uint32_t tmp;
 
@@ -956,6 +957,9 @@
 	if (indirect)
 		amdgpu_vcn_psp_update_sram(adev, inst_idx, 0);
 
+	/* Pause dpg */
+	vcn_v4_0_5_pause_dpg_mode(adev, inst_idx, &state);
+
 	ring = &adev->vcn.inst[inst_idx].ring_enc[0];
 
 	WREG32_SOC15(VCN, inst_idx, regUVD_RB_BASE_LO, ring->gpu_addr);
@@ -1181,8 +1185,11 @@
  */
 static void vcn_v4_0_5_stop_dpg_mode(struct amdgpu_device *adev, int inst_idx)
 {
+	struct dpg_pause_state state = {.fw_based = VCN_DPG_STATE__UNPAUSE};
 	uint32_t tmp;
 
+	vcn_v4_0_5_pause_dpg_mode(adev, inst_idx, &state);
+
 	/* Wait for power status to be 1 */
 	SOC15_WAIT_ON_RREG(VCN, inst_idx, regUVD_POWER_STATUS, 1,
 		UVD_POWER_STATUS__UVD_POWER_STATUS_MASK);
